{"version":3,"sources":["context/socket.js","assets/logo_b.svg","components/comman/header.component.jsx","components/pages/Client.jsx","assets/logo_symbol.svg","components/pages/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["console","log","process","socket","io","transports","SocketContext","React","createContext","HeaderComponent","className","src","Logo","alt","Client","useContext","useState","currInterval","setCurrInterval","location","setLocation","useEffect","interval","setInterval","getLocation","clearInterval","emit","toggleInterval","a","enableHighAccuracy","navigator","geolocation","getCurrentPosition","loc","error","options","lat","coords","latitude","lng","longitude","onClick","Dashboard","room","setRoom","on","checkLocation","disconnect","logo_symbol","App","home","client","dashboard","pages","setPages","handlePage","event","target","value","page","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.9efbab9e.chunk.js","sourcesContent":["import React from 'react';\nimport io from \"socket.io-client\"; \nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/'\n    : 'localhost:3001'; \n    \n\nconsole.log(BASE_URL,process.env.REACT_APP_SOCKET_URL);\nexport const socket = io(BASE_URL, { transports: ['websocket'] });\nexport const SocketContext = React.createContext();","export default __webpack_public_path__ + \"static/media/logo_b.913cee5c.svg\";","import React from 'react';\nimport Logo from '../../assets/logo_b.svg';\n\nconst HeaderComponent = () => {\n    return (\n        <div className=\"main-header\">\n            <img src={Logo} alt=\"React Logo\" />\n        </div>\n    );\n}\n\nexport default HeaderComponent;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { SocketContext } from '../../context/socket';\r\n\r\n\r\nexport default function Client() {\r\n  const socket = useContext(SocketContext);\r\n  const [currInterval, setCurrInterval] = useState(null)\r\n  const [location, setLocation] = useState(null)\r\n  // const [isAutoLocation, seIsAutoLocation] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      console.log('This will run every second!');\r\n      getLocation()\r\n    }, 6000);\r\n    setCurrInterval(interval);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log('currInterval',currInterval)\r\n  }, [currInterval]);\r\n\r\n  useEffect(() => {\r\n    if (location === null) {\r\n      getLocation();\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    console.log('emit location', location)\r\n    socket.emit('send location', location);\r\n  }, [location]);\r\n\r\n\r\n  const toggleInterval = async () => {\r\n    console.log('currInterval', currInterval)\r\n    if (currInterval) {\r\n      clearInterval(currInterval)\r\n      setCurrInterval(null)\r\n    } else {\r\n      const interval = setInterval(() => {\r\n        console.log('This will run every second! 2');\r\n        getLocation()\r\n      }, 6000);\r\n      setCurrInterval(interval);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }\r\n\r\n  const getLocation = async () => {\r\n    var options = {\r\n      enableHighAccuracy: true,\r\n    };\r\n    await navigator.geolocation.getCurrentPosition((loc,error, options) => {\r\n      // console.log(\"Latitude is :\", location.coords.latitude);\r\n      // console.log(\"Longitude is :\", location.coords.longitude);\r\n      console.log('loc',loc)\r\n      setLocation({\r\n        lat: loc.coords.latitude,\r\n        lng: loc.coords.longitude\r\n      });\r\n      return loc\r\n      // socket.emit('send location', loc);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"headline\">Hellow World Client</p>\r\n      <div className=\"actions\">\r\n        <button className=\"button\" onClick={toggleInterval}>Auto Update Location {currInterval ? ' on' : 'off'}</button>\r\n        <button className=\"button\" onClick={getLocation}>Menual Update Location</button>\r\n      </div>\r\n      {location && <div>\r\n        <p><span className=\"bold\">Lat: </span> <span>{location.lat}  </span></p>\r\n        <p><span className=\"bold\">Lng: </span> <span>{location.lng}  </span></p>\r\n      </div>}\r\n\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/logo_symbol.99c7d256.svg\";","import React, { useContext, useEffect, useState } from 'react';\r\nimport { SocketContext } from '../../context/socket';\r\n\r\nimport logo_symbol from '../../assets/logo_symbol.svg'\r\n\r\nexport default function Dashboard() {\r\n  const socket = useContext(SocketContext);\r\n  const [location, setLocation] = useState(null)\r\n  const [room, setRoom] = useState(null)\r\n\r\n  socket.on('get location', (location) => {\r\n    console.log('send location emited', location)\r\n    setLocation(location)\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(location, ' location');\r\n    if (location) {\r\n      checkLocation(location)\r\n    }\r\n  }, [location])\r\n\r\n  useEffect(() => {\r\n    socket.on('get location', (location) => {\r\n      console.log('send location emited', location)\r\n      setLocation(location)\r\n    });\r\n    return () => socket.disconnect();\r\n  }, [])\r\n\r\n  const checkLocation = (location) => {\r\n\r\n    // Living room\r\n    // Lat: 32.080977305224984\r\n    // Lng: 34.810573821163814\r\n\r\n    // Lat: 32.080999578065054\r\n    // Lng: 34.81048174788808\r\n\r\n    // Lat: 32.08101910343775\r\n    // Lng: 34.81061740960387\r\n\r\n    // Lat: 32.08102595498077\r\n    // Lng: 34.81054743074069\r\n\r\n    // Kitchen\r\n    // Lat: 32.08102596710672\r\n    // Lng: 34.81054694602422\r\n\r\n    // Lat: 32.080980279608326\r\n    // Lng: 34.810636428252025\r\n\r\n    // Lat: 32.080977390139516\r\n    // Lng: 34.81071996021636\r\n\r\n    // Lat: 32.08099948363042\r\n    // Lng: 34.81073278566852\r\n\r\n\r\n    let lat = location.lat;\r\n    let lng = location.lng;\r\n    // mapping rooms\r\n    // if (lat > 32.08101910343775  && lat < 32.080999578065054 &&\r\n    //   lng > 34.81054743074069 && lng < 34.81061740960387) {\r\n    //     setRoom('Living Room')\r\n    //   } \r\n\r\n    // if (lat > 32.080977390139516   && lat < 32.08102596710672 &&\r\n    //     lng > 34.81054694602422  && lng < 34.81073278566852) {\r\n    //       setRoom('Kitchen Room')\r\n    // } \r\n\r\n    // barrier\r\n    // Lat: 32.080985001695154\r\n    // Lng: 34.81063506305676\r\n    // mapping barrier\r\n    if (lat > 32.080985001695154 && lng < 34.81063506305676 ) {\r\n      setRoom('Living Room')\r\n    }else if(lat < 32.080985001695154 && lng > 34.81063506305676){\r\n      setRoom('Kitchen Room')\r\n    }\r\n    else {\r\n      setRoom(null)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"headline\">Hellow World Dashboard :</p>\r\n      {location && <div>\r\n        <span className=\"bold\">location.lat: <span>{location.lat}</span></span>\r\n        <span className=\"bold\">location.lng: <span> {location.lng}</span></span>\r\n      </div>\r\n      }\r\n      <p>Area: </p>\r\n      <p>Room:{room && <span>{room}</span>} </p>\r\n      <div className='area'>\r\n        <div className={room === \"Living Room\" ? \"living-room on\" : \"living-room\"}>\r\n          Living room\r\n          <img className=\"logo_symbol\" src={logo_symbol} alt=\"\" />\r\n        </div>\r\n        <div className={room === \"Kitchen Room\" ? \"kitchen-room on\" : \"kitchen-room\"}>\r\n          Kitchen room\r\n          <img className=\"logo_symbol\" src={logo_symbol} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// accurate low\r\n// Living Room\r\n// Lat: 32.081018175898\r\n// Lng: 34.81045157577791\r\n\r\n// Lat: 32.08101693542503\r\n// Lng: 34.8105005090152\r\n\r\n// Lat: 32.08101546744883\r\n// Lng: 34.810659871069355\r\n\r\n// Lat: 32.080994029196276\r\n// Lng: 34.81066633233255\r\n\r\n// Kitchen\r\n// Lat: 32.08103120718914\r\n// Lng: 34.81088943364012\r\n\r\n// Lat: 32.08103942871092\r\n// Lng: 34.80912780761719\r\n\r\n// Lat: 32.08103120718914\r\n// Lng: 34.81088943364012\r\n\r\n// Lat: 32.08103942871092\r\n// Lng: 34.80912780761717","import './App.css';\nimport React, { useState, useEffect } from 'react';\n\nimport { socket, SocketContext } from './context/socket';\nimport {\n\tRoutes,\n\tRoute,\n\tLink,\n\tOutlet\n} from \"react-router-dom\";\n\nimport HeaderComponent from './components/comman/header.component';\nimport Client from './components/pages/Client';\nimport Dashboard from './components/pages/Dashboard';\n\nfunction App() {\n\tconst [pages, setPages] = useState({ home: true, client: null, dashboard: null })\n\n\tconst handlePage = (event) => {\n\t\tconsole.log('page event', event.target.value)\n\t\tlet page = event.target.value;\n\t\tsetPages({ home: null, client: null, dashboard: null })\n\t\tsetPages({ [page]: true })\n\t}\n\n\treturn (\n\t\t<SocketContext.Provider value={socket}>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<HeaderComponent />\n\t\t\t\t<div className=\"actions\">\n\t\t\t\t\t<button className=\"nav_button\" value=\"home\" onClick={handlePage}>Home</button>\n\t\t\t\t\t<button className=\"nav_button\" value=\"client\" onClick={handlePage}>Client</button>\n\t\t\t\t\t<button className=\"nav_button\" value=\"dashboard\" onClick={handlePage}>Dashboard</button>\n\t\t\t\t</div>\t\n\t\t\t\t{/* <Outlet /> */}\n\n\t\t\t\t{pages.home && <div className=\"headline\">Hellow World Home</div>}\n\t\t\t\t{pages.client && <Client />}\n\t\t\t\t{pages.dashboard && <Dashboard />}\n\t\t\t</div>\n\t\t</SocketContext.Provider>\n\n\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n\tBrowserRouter,\n\tRoutes,\n\tRoute\n  } from \"react-router-dom\";\n\nimport Client from './components/pages/Client';\nimport Dashboard from './components/pages/Dashboard';\n\n\nReactDOM.render(\n<BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n      <Route path=\"/client\" element={<Client />} />\n      <Route path=\"/dashboard\" element={<Dashboard />} />\n      </Route>\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n  // <React.Fragment>\n  //   <App />\n  // </React.Fragment>,\n  // document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}